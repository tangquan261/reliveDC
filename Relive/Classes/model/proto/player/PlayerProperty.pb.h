// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerProperty.proto

#ifndef PROTOBUF_PlayerProperty_2eproto__INCLUDED
#define PROTOBUF_PlayerProperty_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace road {
namespace yishi {
namespace proto {
namespace player {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerProperty_2eproto();
void protobuf_AssignDesc_PlayerProperty_2eproto();
void protobuf_ShutdownFile_PlayerProperty_2eproto();

class PlayerProperty;
class Entity;

// ===================================================================

class PlayerProperty : public ::google::protobuf::MessageLite {
 public:
  PlayerProperty();
  virtual ~PlayerProperty();

  PlayerProperty(const PlayerProperty& from);

  inline PlayerProperty& operator=(const PlayerProperty& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerProperty& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerProperty* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerProperty* other);

  // implements Message ----------------------------------------------

  PlayerProperty* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerProperty& from);
  void MergeFrom(const PlayerProperty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.road.yishi.proto.player.Entity properties = 1;
  inline int properties_size() const;
  inline void clear_properties();
  static const int kPropertiesFieldNumber = 1;
  inline const ::com::road::yishi::proto::player::Entity& properties(int index) const;
  inline ::com::road::yishi::proto::player::Entity* mutable_properties(int index);
  inline ::com::road::yishi::proto::player::Entity* add_properties();
  inline const ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::Entity >&
      properties() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::Entity >*
      mutable_properties();

  // @@protoc_insertion_point(class_scope:com.road.yishi.proto.player.PlayerProperty)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::Entity > properties_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PlayerProperty_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PlayerProperty_2eproto();
  #endif
  friend void protobuf_AssignDesc_PlayerProperty_2eproto();
  friend void protobuf_ShutdownFile_PlayerProperty_2eproto();

  void InitAsDefaultInstance();
  static PlayerProperty* default_instance_;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::MessageLite {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }

  static const Entity& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Entity* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Entity* other);

  // implements Message ----------------------------------------------

  Entity* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::int32 key() const;
  inline void set_key(::google::protobuf::int32 value);

  // optional int32 intValue = 2;
  inline bool has_intvalue() const;
  inline void clear_intvalue();
  static const int kIntValueFieldNumber = 2;
  inline ::google::protobuf::int32 intvalue() const;
  inline void set_intvalue(::google::protobuf::int32 value);

  // optional string strValue = 3;
  inline bool has_strvalue() const;
  inline void clear_strvalue();
  static const int kStrValueFieldNumber = 3;
  inline const ::std::string& strvalue() const;
  inline void set_strvalue(const ::std::string& value);
  inline void set_strvalue(const char* value);
  inline void set_strvalue(const char* value, size_t size);
  inline ::std::string* mutable_strvalue();
  inline ::std::string* release_strvalue();
  inline void set_allocated_strvalue(::std::string* strvalue);

  // @@protoc_insertion_point(class_scope:com.road.yishi.proto.player.Entity)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_intvalue();
  inline void clear_has_intvalue();
  inline void set_has_strvalue();
  inline void clear_has_strvalue();

  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 intvalue_;
  ::std::string* strvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PlayerProperty_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PlayerProperty_2eproto();
  #endif
  friend void protobuf_AssignDesc_PlayerProperty_2eproto();
  friend void protobuf_ShutdownFile_PlayerProperty_2eproto();

  void InitAsDefaultInstance();
  static Entity* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerProperty

// repeated .com.road.yishi.proto.player.Entity properties = 1;
inline int PlayerProperty::properties_size() const {
  return properties_.size();
}
inline void PlayerProperty::clear_properties() {
  properties_.Clear();
}
inline const ::com::road::yishi::proto::player::Entity& PlayerProperty::properties(int index) const {
  return properties_.Get(index);
}
inline ::com::road::yishi::proto::player::Entity* PlayerProperty::mutable_properties(int index) {
  return properties_.Mutable(index);
}
inline ::com::road::yishi::proto::player::Entity* PlayerProperty::add_properties() {
  return properties_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::Entity >&
PlayerProperty::properties() const {
  return properties_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::Entity >*
PlayerProperty::mutable_properties() {
  return &properties_;
}

// -------------------------------------------------------------------

// Entity

// optional int32 key = 1;
inline bool Entity::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entity::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entity::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entity::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 Entity::key() const {
  return key_;
}
inline void Entity::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
}

// optional int32 intValue = 2;
inline bool Entity::has_intvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Entity::set_has_intvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Entity::clear_has_intvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Entity::clear_intvalue() {
  intvalue_ = 0;
  clear_has_intvalue();
}
inline ::google::protobuf::int32 Entity::intvalue() const {
  return intvalue_;
}
inline void Entity::set_intvalue(::google::protobuf::int32 value) {
  set_has_intvalue();
  intvalue_ = value;
}

// optional string strValue = 3;
inline bool Entity::has_strvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Entity::set_has_strvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Entity::clear_has_strvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Entity::clear_strvalue() {
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    strvalue_->clear();
  }
  clear_has_strvalue();
}
inline const ::std::string& Entity::strvalue() const {
  return *strvalue_;
}
inline void Entity::set_strvalue(const ::std::string& value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void Entity::set_strvalue(const char* value) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(value);
}
inline void Entity::set_strvalue(const char* value, size_t size) {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  strvalue_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Entity::mutable_strvalue() {
  set_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    strvalue_ = new ::std::string;
  }
  return strvalue_;
}
inline ::std::string* Entity::release_strvalue() {
  clear_has_strvalue();
  if (strvalue_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strvalue_;
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Entity::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete strvalue_;
  }
  if (strvalue) {
    set_has_strvalue();
    strvalue_ = strvalue;
  } else {
    clear_has_strvalue();
    strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace player
}  // namespace proto
}  // namespace yishi
}  // namespace road
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerProperty_2eproto__INCLUDED
