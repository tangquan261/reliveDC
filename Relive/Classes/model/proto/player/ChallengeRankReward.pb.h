// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChallengeRankReward.proto

#ifndef PROTOBUF_ChallengeRankReward_2eproto__INCLUDED
#define PROTOBUF_ChallengeRankReward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace road {
namespace yishi {
namespace proto {
namespace player {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ChallengeRankReward_2eproto();
void protobuf_AssignDesc_ChallengeRankReward_2eproto();
void protobuf_ShutdownFile_ChallengeRankReward_2eproto();

class ChallengeRankRewardMsg;

// ===================================================================

class ChallengeRankRewardMsg : public ::google::protobuf::MessageLite {
 public:
  ChallengeRankRewardMsg();
  virtual ~ChallengeRankRewardMsg();

  ChallengeRankRewardMsg(const ChallengeRankRewardMsg& from);

  inline ChallengeRankRewardMsg& operator=(const ChallengeRankRewardMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ChallengeRankRewardMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ChallengeRankRewardMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ChallengeRankRewardMsg* other);

  // implements Message ----------------------------------------------

  ChallengeRankRewardMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ChallengeRankRewardMsg& from);
  void MergeFrom(const ChallengeRankRewardMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_take = 1;
  inline bool has_is_take() const;
  inline void clear_is_take();
  static const int kIsTakeFieldNumber = 1;
  inline bool is_take() const;
  inline void set_is_take(bool value);

  // optional int32 param1 = 2;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 2;
  inline ::google::protobuf::int32 param1() const;
  inline void set_param1(::google::protobuf::int32 value);

  // optional int32 param2 = 3;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 3;
  inline ::google::protobuf::int32 param2() const;
  inline void set_param2(::google::protobuf::int32 value);

  // optional int32 param3 = 4;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 4;
  inline ::google::protobuf::int32 param3() const;
  inline void set_param3(::google::protobuf::int32 value);

  // optional int32 param4 = 5;
  inline bool has_param4() const;
  inline void clear_param4();
  static const int kParam4FieldNumber = 5;
  inline ::google::protobuf::int32 param4() const;
  inline void set_param4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.road.yishi.proto.player.ChallengeRankRewardMsg)
 private:
  inline void set_has_is_take();
  inline void clear_has_is_take();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_param4();
  inline void clear_has_param4();

  bool is_take_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  ::google::protobuf::int32 param4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ChallengeRankReward_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ChallengeRankReward_2eproto();
  #endif
  friend void protobuf_AssignDesc_ChallengeRankReward_2eproto();
  friend void protobuf_ShutdownFile_ChallengeRankReward_2eproto();

  void InitAsDefaultInstance();
  static ChallengeRankRewardMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// ChallengeRankRewardMsg

// optional bool is_take = 1;
inline bool ChallengeRankRewardMsg::has_is_take() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallengeRankRewardMsg::set_has_is_take() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallengeRankRewardMsg::clear_has_is_take() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallengeRankRewardMsg::clear_is_take() {
  is_take_ = false;
  clear_has_is_take();
}
inline bool ChallengeRankRewardMsg::is_take() const {
  return is_take_;
}
inline void ChallengeRankRewardMsg::set_is_take(bool value) {
  set_has_is_take();
  is_take_ = value;
}

// optional int32 param1 = 2;
inline bool ChallengeRankRewardMsg::has_param1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallengeRankRewardMsg::set_has_param1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallengeRankRewardMsg::clear_has_param1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallengeRankRewardMsg::clear_param1() {
  param1_ = 0;
  clear_has_param1();
}
inline ::google::protobuf::int32 ChallengeRankRewardMsg::param1() const {
  return param1_;
}
inline void ChallengeRankRewardMsg::set_param1(::google::protobuf::int32 value) {
  set_has_param1();
  param1_ = value;
}

// optional int32 param2 = 3;
inline bool ChallengeRankRewardMsg::has_param2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChallengeRankRewardMsg::set_has_param2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChallengeRankRewardMsg::clear_has_param2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChallengeRankRewardMsg::clear_param2() {
  param2_ = 0;
  clear_has_param2();
}
inline ::google::protobuf::int32 ChallengeRankRewardMsg::param2() const {
  return param2_;
}
inline void ChallengeRankRewardMsg::set_param2(::google::protobuf::int32 value) {
  set_has_param2();
  param2_ = value;
}

// optional int32 param3 = 4;
inline bool ChallengeRankRewardMsg::has_param3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChallengeRankRewardMsg::set_has_param3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChallengeRankRewardMsg::clear_has_param3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChallengeRankRewardMsg::clear_param3() {
  param3_ = 0;
  clear_has_param3();
}
inline ::google::protobuf::int32 ChallengeRankRewardMsg::param3() const {
  return param3_;
}
inline void ChallengeRankRewardMsg::set_param3(::google::protobuf::int32 value) {
  set_has_param3();
  param3_ = value;
}

// optional int32 param4 = 5;
inline bool ChallengeRankRewardMsg::has_param4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChallengeRankRewardMsg::set_has_param4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChallengeRankRewardMsg::clear_has_param4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChallengeRankRewardMsg::clear_param4() {
  param4_ = 0;
  clear_has_param4();
}
inline ::google::protobuf::int32 ChallengeRankRewardMsg::param4() const {
  return param4_;
}
inline void ChallengeRankRewardMsg::set_param4(::google::protobuf::int32 value) {
  set_has_param4();
  param4_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace player
}  // namespace proto
}  // namespace yishi
}  // namespace road
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChallengeRankReward_2eproto__INCLUDED
