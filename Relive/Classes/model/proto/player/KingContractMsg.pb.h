// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KingContractMsg.proto

#ifndef PROTOBUF_KingContractMsg_2eproto__INCLUDED
#define PROTOBUF_KingContractMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace road {
namespace yishi {
namespace proto {
namespace player {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_KingContractMsg_2eproto();
void protobuf_AssignDesc_KingContractMsg_2eproto();
void protobuf_ShutdownFile_KingContractMsg_2eproto();

class KingContractMsg;
class KingContractInfoMsg;

// ===================================================================

class KingContractMsg : public ::google::protobuf::MessageLite {
 public:
  KingContractMsg();
  virtual ~KingContractMsg();

  KingContractMsg(const KingContractMsg& from);

  inline KingContractMsg& operator=(const KingContractMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const KingContractMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const KingContractMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(KingContractMsg* other);

  // implements Message ----------------------------------------------

  KingContractMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const KingContractMsg& from);
  void MergeFrom(const KingContractMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.road.yishi.proto.player.KingContractInfoMsg kingContractInfos = 1;
  inline int kingcontractinfos_size() const;
  inline void clear_kingcontractinfos();
  static const int kKingContractInfosFieldNumber = 1;
  inline const ::com::road::yishi::proto::player::KingContractInfoMsg& kingcontractinfos(int index) const;
  inline ::com::road::yishi::proto::player::KingContractInfoMsg* mutable_kingcontractinfos(int index);
  inline ::com::road::yishi::proto::player::KingContractInfoMsg* add_kingcontractinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::KingContractInfoMsg >&
      kingcontractinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::KingContractInfoMsg >*
      mutable_kingcontractinfos();

  // @@protoc_insertion_point(class_scope:com.road.yishi.proto.player.KingContractMsg)
 private:

  ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::KingContractInfoMsg > kingcontractinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_KingContractMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_KingContractMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_KingContractMsg_2eproto();
  friend void protobuf_ShutdownFile_KingContractMsg_2eproto();

  void InitAsDefaultInstance();
  static KingContractMsg* default_instance_;
};
// -------------------------------------------------------------------

class KingContractInfoMsg : public ::google::protobuf::MessageLite {
 public:
  KingContractInfoMsg();
  virtual ~KingContractInfoMsg();

  KingContractInfoMsg(const KingContractInfoMsg& from);

  inline KingContractInfoMsg& operator=(const KingContractInfoMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const KingContractInfoMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const KingContractInfoMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(KingContractInfoMsg* other);

  // implements Message ----------------------------------------------

  KingContractInfoMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const KingContractInfoMsg& from);
  void MergeFrom(const KingContractInfoMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 contractId = 1;
  inline bool has_contractid() const;
  inline void clear_contractid();
  static const int kContractIdFieldNumber = 1;
  inline ::google::protobuf::int32 contractid() const;
  inline void set_contractid(::google::protobuf::int32 value);

  // optional string endData = 2;
  inline bool has_enddata() const;
  inline void clear_enddata();
  static const int kEndDataFieldNumber = 2;
  inline const ::std::string& enddata() const;
  inline void set_enddata(const ::std::string& value);
  inline void set_enddata(const char* value);
  inline void set_enddata(const char* value, size_t size);
  inline ::std::string* mutable_enddata();
  inline ::std::string* release_enddata();
  inline void set_allocated_enddata(::std::string* enddata);

  // @@protoc_insertion_point(class_scope:com.road.yishi.proto.player.KingContractInfoMsg)
 private:
  inline void set_has_contractid();
  inline void clear_has_contractid();
  inline void set_has_enddata();
  inline void clear_has_enddata();

  ::std::string* enddata_;
  ::google::protobuf::int32 contractid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_KingContractMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_KingContractMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_KingContractMsg_2eproto();
  friend void protobuf_ShutdownFile_KingContractMsg_2eproto();

  void InitAsDefaultInstance();
  static KingContractInfoMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// KingContractMsg

// repeated .com.road.yishi.proto.player.KingContractInfoMsg kingContractInfos = 1;
inline int KingContractMsg::kingcontractinfos_size() const {
  return kingcontractinfos_.size();
}
inline void KingContractMsg::clear_kingcontractinfos() {
  kingcontractinfos_.Clear();
}
inline const ::com::road::yishi::proto::player::KingContractInfoMsg& KingContractMsg::kingcontractinfos(int index) const {
  return kingcontractinfos_.Get(index);
}
inline ::com::road::yishi::proto::player::KingContractInfoMsg* KingContractMsg::mutable_kingcontractinfos(int index) {
  return kingcontractinfos_.Mutable(index);
}
inline ::com::road::yishi::proto::player::KingContractInfoMsg* KingContractMsg::add_kingcontractinfos() {
  return kingcontractinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::KingContractInfoMsg >&
KingContractMsg::kingcontractinfos() const {
  return kingcontractinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::road::yishi::proto::player::KingContractInfoMsg >*
KingContractMsg::mutable_kingcontractinfos() {
  return &kingcontractinfos_;
}

// -------------------------------------------------------------------

// KingContractInfoMsg

// optional int32 contractId = 1;
inline bool KingContractInfoMsg::has_contractid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KingContractInfoMsg::set_has_contractid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KingContractInfoMsg::clear_has_contractid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KingContractInfoMsg::clear_contractid() {
  contractid_ = 0;
  clear_has_contractid();
}
inline ::google::protobuf::int32 KingContractInfoMsg::contractid() const {
  return contractid_;
}
inline void KingContractInfoMsg::set_contractid(::google::protobuf::int32 value) {
  set_has_contractid();
  contractid_ = value;
}

// optional string endData = 2;
inline bool KingContractInfoMsg::has_enddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KingContractInfoMsg::set_has_enddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KingContractInfoMsg::clear_has_enddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KingContractInfoMsg::clear_enddata() {
  if (enddata_ != &::google::protobuf::internal::kEmptyString) {
    enddata_->clear();
  }
  clear_has_enddata();
}
inline const ::std::string& KingContractInfoMsg::enddata() const {
  return *enddata_;
}
inline void KingContractInfoMsg::set_enddata(const ::std::string& value) {
  set_has_enddata();
  if (enddata_ == &::google::protobuf::internal::kEmptyString) {
    enddata_ = new ::std::string;
  }
  enddata_->assign(value);
}
inline void KingContractInfoMsg::set_enddata(const char* value) {
  set_has_enddata();
  if (enddata_ == &::google::protobuf::internal::kEmptyString) {
    enddata_ = new ::std::string;
  }
  enddata_->assign(value);
}
inline void KingContractInfoMsg::set_enddata(const char* value, size_t size) {
  set_has_enddata();
  if (enddata_ == &::google::protobuf::internal::kEmptyString) {
    enddata_ = new ::std::string;
  }
  enddata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KingContractInfoMsg::mutable_enddata() {
  set_has_enddata();
  if (enddata_ == &::google::protobuf::internal::kEmptyString) {
    enddata_ = new ::std::string;
  }
  return enddata_;
}
inline ::std::string* KingContractInfoMsg::release_enddata() {
  clear_has_enddata();
  if (enddata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = enddata_;
    enddata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void KingContractInfoMsg::set_allocated_enddata(::std::string* enddata) {
  if (enddata_ != &::google::protobuf::internal::kEmptyString) {
    delete enddata_;
  }
  if (enddata) {
    set_has_enddata();
    enddata_ = enddata;
  } else {
    clear_has_enddata();
    enddata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace player
}  // namespace proto
}  // namespace yishi
}  // namespace road
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_KingContractMsg_2eproto__INCLUDED
