// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RateUpdateReq.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RateUpdateReq.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace road {
namespace yishi {
namespace proto {
namespace player {

void protobuf_ShutdownFile_RateUpdateReq_2eproto() {
  delete RateUpdateReqMsg::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_RateUpdateReq_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_RateUpdateReq_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  RateUpdateReqMsg::default_instance_ = new RateUpdateReqMsg();
  RateUpdateReqMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RateUpdateReq_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_RateUpdateReq_2eproto_once_);
void protobuf_AddDesc_RateUpdateReq_2eproto() {
  ::google::protobuf::::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_RateUpdateReq_2eproto_once_,
                 &protobuf_AddDesc_RateUpdateReq_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RateUpdateReq_2eproto {
  StaticDescriptorInitializer_RateUpdateReq_2eproto() {
    protobuf_AddDesc_RateUpdateReq_2eproto();
  }
} static_descriptor_initializer_RateUpdateReq_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int RateUpdateReqMsg::kRateFieldNumber;
const int RateUpdateReqMsg::kBeginTimeFieldNumber;
const int RateUpdateReqMsg::kEndTimeFieldNumber;
const int RateUpdateReqMsg::kBeginDayFieldNumber;
const int RateUpdateReqMsg::kEndDayFieldNumber;
const int RateUpdateReqMsg::kBufferTypeFieldNumber;
const int RateUpdateReqMsg::kParam1FieldNumber;
const int RateUpdateReqMsg::kParam2FieldNumber;
const int RateUpdateReqMsg::kRateNameFieldNumber;
const int RateUpdateReqMsg::kRateDescFieldNumber;
#endif  // !_MSC_VER

RateUpdateReqMsg::RateUpdateReqMsg()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void RateUpdateReqMsg::InitAsDefaultInstance() {
}

RateUpdateReqMsg::RateUpdateReqMsg(const RateUpdateReqMsg& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void RateUpdateReqMsg::SharedCtor() {
  _cached_size_ = 0;
  rate_ = 0;
  begin_time_ = 0;
  end_time_ = 0;
  beginday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  endday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  buffer_type_ = 0;
  param1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  param2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rate_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rate_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RateUpdateReqMsg::~RateUpdateReqMsg() {
  SharedDtor();
}

void RateUpdateReqMsg::SharedDtor() {
  if (beginday_ != &::google::protobuf::internal::kEmptyString) {
    delete beginday_;
  }
  if (endday_ != &::google::protobuf::internal::kEmptyString) {
    delete endday_;
  }
  if (param1_ != &::google::protobuf::internal::kEmptyString) {
    delete param1_;
  }
  if (param2_ != &::google::protobuf::internal::kEmptyString) {
    delete param2_;
  }
  if (rate_name_ != &::google::protobuf::internal::kEmptyString) {
    delete rate_name_;
  }
  if (rate_desc_ != &::google::protobuf::internal::kEmptyString) {
    delete rate_desc_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void RateUpdateReqMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RateUpdateReqMsg& RateUpdateReqMsg::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_RateUpdateReq_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_RateUpdateReq_2eproto();
#endif
  return *default_instance_;
}

RateUpdateReqMsg* RateUpdateReqMsg::default_instance_ = NULL;

RateUpdateReqMsg* RateUpdateReqMsg::New() const {
  return new RateUpdateReqMsg;
}

void RateUpdateReqMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rate_ = 0;
    begin_time_ = 0;
    end_time_ = 0;
    if (has_beginday()) {
      if (beginday_ != &::google::protobuf::internal::kEmptyString) {
        beginday_->clear();
      }
    }
    if (has_endday()) {
      if (endday_ != &::google::protobuf::internal::kEmptyString) {
        endday_->clear();
      }
    }
    buffer_type_ = 0;
    if (has_param1()) {
      if (param1_ != &::google::protobuf::internal::kEmptyString) {
        param1_->clear();
      }
    }
    if (has_param2()) {
      if (param2_ != &::google::protobuf::internal::kEmptyString) {
        param2_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_rate_name()) {
      if (rate_name_ != &::google::protobuf::internal::kEmptyString) {
        rate_name_->clear();
      }
    }
    if (has_rate_desc()) {
      if (rate_desc_ != &::google::protobuf::internal::kEmptyString) {
        rate_desc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool RateUpdateReqMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rate_)));
          set_has_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_begin_time;
        break;
      }

      // optional int32 begin_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_begin_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begin_time_)));
          set_has_begin_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_end_time;
        break;
      }

      // optional int32 end_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_beginDay;
        break;
      }

      // optional string beginDay = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beginDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beginday()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_endDay;
        break;
      }

      // optional string endDay = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_endDay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endday()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_buffer_type;
        break;
      }

      // optional int32 buffer_type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buffer_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffer_type_)));
          set_has_buffer_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_param1;
        break;
      }

      // optional string param1 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_param2;
        break;
      }

      // optional string param2 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param2()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_rate_name;
        break;
      }

      // optional string rate_name = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rate_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rate_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_rate_desc;
        break;
      }

      // optional string rate_desc = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rate_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rate_desc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RateUpdateReqMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rate = 1;
  if (has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rate(), output);
  }

  // optional int32 begin_time = 2;
  if (has_begin_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->begin_time(), output);
  }

  // optional int32 end_time = 3;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->end_time(), output);
  }

  // optional string beginDay = 4;
  if (has_beginday()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->beginday(), output);
  }

  // optional string endDay = 5;
  if (has_endday()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->endday(), output);
  }

  // optional int32 buffer_type = 6;
  if (has_buffer_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->buffer_type(), output);
  }

  // optional string param1 = 7;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->param1(), output);
  }

  // optional string param2 = 8;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->param2(), output);
  }

  // optional string rate_name = 9;
  if (has_rate_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->rate_name(), output);
  }

  // optional string rate_desc = 10;
  if (has_rate_desc()) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->rate_desc(), output);
  }

}

int RateUpdateReqMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rate = 1;
    if (has_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rate());
    }

    // optional int32 begin_time = 2;
    if (has_begin_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begin_time());
    }

    // optional int32 end_time = 3;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_time());
    }

    // optional string beginDay = 4;
    if (has_beginday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beginday());
    }

    // optional string endDay = 5;
    if (has_endday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endday());
    }

    // optional int32 buffer_type = 6;
    if (has_buffer_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buffer_type());
    }

    // optional string param1 = 7;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param1());
    }

    // optional string param2 = 8;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param2());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string rate_name = 9;
    if (has_rate_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rate_name());
    }

    // optional string rate_desc = 10;
    if (has_rate_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rate_desc());
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RateUpdateReqMsg::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RateUpdateReqMsg*>(&from));
}

void RateUpdateReqMsg::MergeFrom(const RateUpdateReqMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rate()) {
      set_rate(from.rate());
    }
    if (from.has_begin_time()) {
      set_begin_time(from.begin_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_beginday()) {
      set_beginday(from.beginday());
    }
    if (from.has_endday()) {
      set_endday(from.endday());
    }
    if (from.has_buffer_type()) {
      set_buffer_type(from.buffer_type());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_param2()) {
      set_param2(from.param2());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rate_name()) {
      set_rate_name(from.rate_name());
    }
    if (from.has_rate_desc()) {
      set_rate_desc(from.rate_desc());
    }
  }
}

void RateUpdateReqMsg::CopyFrom(const RateUpdateReqMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RateUpdateReqMsg::IsInitialized() const {

  return true;
}

void RateUpdateReqMsg::Swap(RateUpdateReqMsg* other) {
  if (other != this) {
    std::swap(rate_, other->rate_);
    std::swap(begin_time_, other->begin_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(beginday_, other->beginday_);
    std::swap(endday_, other->endday_);
    std::swap(buffer_type_, other->buffer_type_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    std::swap(rate_name_, other->rate_name_);
    std::swap(rate_desc_, other->rate_desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string RateUpdateReqMsg::GetTypeName() const {
  return "com.road.yishi.proto.player.RateUpdateReqMsg";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace player
}  // namespace proto
}  // namespace yishi
}  // namespace road
}  // namespace com

// @@protoc_insertion_point(global_scope)
