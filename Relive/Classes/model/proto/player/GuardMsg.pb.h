// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuardMsg.proto

#ifndef PROTOBUF_GuardMsg_2eproto__INCLUDED
#define PROTOBUF_GuardMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace road {
namespace yishi {
namespace proto {
namespace watch {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GuardMsg_2eproto();
void protobuf_AssignDesc_GuardMsg_2eproto();
void protobuf_ShutdownFile_GuardMsg_2eproto();

class GuardMsg;

// ===================================================================

class GuardMsg : public ::google::protobuf::MessageLite {
 public:
  GuardMsg();
  virtual ~GuardMsg();

  GuardMsg(const GuardMsg& from);

  inline GuardMsg& operator=(const GuardMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const GuardMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GuardMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GuardMsg* other);

  // implements Message ----------------------------------------------

  GuardMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GuardMsg& from);
  void MergeFrom(const GuardMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fireResi = 1;
  inline bool has_fireresi() const;
  inline void clear_fireresi();
  static const int kFireResiFieldNumber = 1;
  inline ::google::protobuf::int32 fireresi() const;
  inline void set_fireresi(::google::protobuf::int32 value);

  // optional int32 waterResi = 2;
  inline bool has_waterresi() const;
  inline void clear_waterresi();
  static const int kWaterResiFieldNumber = 2;
  inline ::google::protobuf::int32 waterresi() const;
  inline void set_waterresi(::google::protobuf::int32 value);

  // optional int32 electResi = 3;
  inline bool has_electresi() const;
  inline void clear_electresi();
  static const int kElectResiFieldNumber = 3;
  inline ::google::protobuf::int32 electresi() const;
  inline void set_electresi(::google::protobuf::int32 value);

  // optional int32 windResi = 4;
  inline bool has_windresi() const;
  inline void clear_windresi();
  static const int kWindResiFieldNumber = 4;
  inline ::google::protobuf::int32 windresi() const;
  inline void set_windresi(::google::protobuf::int32 value);

  // optional int32 darkResi = 5;
  inline bool has_darkresi() const;
  inline void clear_darkresi();
  static const int kDarkResiFieldNumber = 5;
  inline ::google::protobuf::int32 darkresi() const;
  inline void set_darkresi(::google::protobuf::int32 value);

  // optional int32 lightResi = 6;
  inline bool has_lightresi() const;
  inline void clear_lightresi();
  static const int kLightResiFieldNumber = 6;
  inline ::google::protobuf::int32 lightresi() const;
  inline void set_lightresi(::google::protobuf::int32 value);

  // optional int32 reduce_resi = 7;
  inline bool has_reduce_resi() const;
  inline void clear_reduce_resi();
  static const int kReduceResiFieldNumber = 7;
  inline ::google::protobuf::int32 reduce_resi() const;
  inline void set_reduce_resi(::google::protobuf::int32 value);

  // optional int32 pet_fireResi = 8;
  inline bool has_pet_fireresi() const;
  inline void clear_pet_fireresi();
  static const int kPetFireResiFieldNumber = 8;
  inline ::google::protobuf::int32 pet_fireresi() const;
  inline void set_pet_fireresi(::google::protobuf::int32 value);

  // optional int32 pet_waterResi = 9;
  inline bool has_pet_waterresi() const;
  inline void clear_pet_waterresi();
  static const int kPetWaterResiFieldNumber = 9;
  inline ::google::protobuf::int32 pet_waterresi() const;
  inline void set_pet_waterresi(::google::protobuf::int32 value);

  // optional int32 pet_electResi = 10;
  inline bool has_pet_electresi() const;
  inline void clear_pet_electresi();
  static const int kPetElectResiFieldNumber = 10;
  inline ::google::protobuf::int32 pet_electresi() const;
  inline void set_pet_electresi(::google::protobuf::int32 value);

  // optional int32 pet_windResi = 11;
  inline bool has_pet_windresi() const;
  inline void clear_pet_windresi();
  static const int kPetWindResiFieldNumber = 11;
  inline ::google::protobuf::int32 pet_windresi() const;
  inline void set_pet_windresi(::google::protobuf::int32 value);

  // optional int32 pet_darkResi = 12;
  inline bool has_pet_darkresi() const;
  inline void clear_pet_darkresi();
  static const int kPetDarkResiFieldNumber = 12;
  inline ::google::protobuf::int32 pet_darkresi() const;
  inline void set_pet_darkresi(::google::protobuf::int32 value);

  // optional int32 pet_lightResi = 13;
  inline bool has_pet_lightresi() const;
  inline void clear_pet_lightresi();
  static const int kPetLightResiFieldNumber = 13;
  inline ::google::protobuf::int32 pet_lightresi() const;
  inline void set_pet_lightresi(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.road.yishi.proto.watch.GuardMsg)
 private:
  inline void set_has_fireresi();
  inline void clear_has_fireresi();
  inline void set_has_waterresi();
  inline void clear_has_waterresi();
  inline void set_has_electresi();
  inline void clear_has_electresi();
  inline void set_has_windresi();
  inline void clear_has_windresi();
  inline void set_has_darkresi();
  inline void clear_has_darkresi();
  inline void set_has_lightresi();
  inline void clear_has_lightresi();
  inline void set_has_reduce_resi();
  inline void clear_has_reduce_resi();
  inline void set_has_pet_fireresi();
  inline void clear_has_pet_fireresi();
  inline void set_has_pet_waterresi();
  inline void clear_has_pet_waterresi();
  inline void set_has_pet_electresi();
  inline void clear_has_pet_electresi();
  inline void set_has_pet_windresi();
  inline void clear_has_pet_windresi();
  inline void set_has_pet_darkresi();
  inline void clear_has_pet_darkresi();
  inline void set_has_pet_lightresi();
  inline void clear_has_pet_lightresi();

  ::google::protobuf::int32 fireresi_;
  ::google::protobuf::int32 waterresi_;
  ::google::protobuf::int32 electresi_;
  ::google::protobuf::int32 windresi_;
  ::google::protobuf::int32 darkresi_;
  ::google::protobuf::int32 lightresi_;
  ::google::protobuf::int32 reduce_resi_;
  ::google::protobuf::int32 pet_fireresi_;
  ::google::protobuf::int32 pet_waterresi_;
  ::google::protobuf::int32 pet_electresi_;
  ::google::protobuf::int32 pet_windresi_;
  ::google::protobuf::int32 pet_darkresi_;
  ::google::protobuf::int32 pet_lightresi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_GuardMsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_GuardMsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_GuardMsg_2eproto();
  friend void protobuf_ShutdownFile_GuardMsg_2eproto();

  void InitAsDefaultInstance();
  static GuardMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// GuardMsg

// optional int32 fireResi = 1;
inline bool GuardMsg::has_fireresi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuardMsg::set_has_fireresi() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuardMsg::clear_has_fireresi() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuardMsg::clear_fireresi() {
  fireresi_ = 0;
  clear_has_fireresi();
}
inline ::google::protobuf::int32 GuardMsg::fireresi() const {
  return fireresi_;
}
inline void GuardMsg::set_fireresi(::google::protobuf::int32 value) {
  set_has_fireresi();
  fireresi_ = value;
}

// optional int32 waterResi = 2;
inline bool GuardMsg::has_waterresi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuardMsg::set_has_waterresi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuardMsg::clear_has_waterresi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuardMsg::clear_waterresi() {
  waterresi_ = 0;
  clear_has_waterresi();
}
inline ::google::protobuf::int32 GuardMsg::waterresi() const {
  return waterresi_;
}
inline void GuardMsg::set_waterresi(::google::protobuf::int32 value) {
  set_has_waterresi();
  waterresi_ = value;
}

// optional int32 electResi = 3;
inline bool GuardMsg::has_electresi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuardMsg::set_has_electresi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuardMsg::clear_has_electresi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuardMsg::clear_electresi() {
  electresi_ = 0;
  clear_has_electresi();
}
inline ::google::protobuf::int32 GuardMsg::electresi() const {
  return electresi_;
}
inline void GuardMsg::set_electresi(::google::protobuf::int32 value) {
  set_has_electresi();
  electresi_ = value;
}

// optional int32 windResi = 4;
inline bool GuardMsg::has_windresi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuardMsg::set_has_windresi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuardMsg::clear_has_windresi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuardMsg::clear_windresi() {
  windresi_ = 0;
  clear_has_windresi();
}
inline ::google::protobuf::int32 GuardMsg::windresi() const {
  return windresi_;
}
inline void GuardMsg::set_windresi(::google::protobuf::int32 value) {
  set_has_windresi();
  windresi_ = value;
}

// optional int32 darkResi = 5;
inline bool GuardMsg::has_darkresi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuardMsg::set_has_darkresi() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuardMsg::clear_has_darkresi() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuardMsg::clear_darkresi() {
  darkresi_ = 0;
  clear_has_darkresi();
}
inline ::google::protobuf::int32 GuardMsg::darkresi() const {
  return darkresi_;
}
inline void GuardMsg::set_darkresi(::google::protobuf::int32 value) {
  set_has_darkresi();
  darkresi_ = value;
}

// optional int32 lightResi = 6;
inline bool GuardMsg::has_lightresi() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuardMsg::set_has_lightresi() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuardMsg::clear_has_lightresi() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuardMsg::clear_lightresi() {
  lightresi_ = 0;
  clear_has_lightresi();
}
inline ::google::protobuf::int32 GuardMsg::lightresi() const {
  return lightresi_;
}
inline void GuardMsg::set_lightresi(::google::protobuf::int32 value) {
  set_has_lightresi();
  lightresi_ = value;
}

// optional int32 reduce_resi = 7;
inline bool GuardMsg::has_reduce_resi() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuardMsg::set_has_reduce_resi() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuardMsg::clear_has_reduce_resi() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuardMsg::clear_reduce_resi() {
  reduce_resi_ = 0;
  clear_has_reduce_resi();
}
inline ::google::protobuf::int32 GuardMsg::reduce_resi() const {
  return reduce_resi_;
}
inline void GuardMsg::set_reduce_resi(::google::protobuf::int32 value) {
  set_has_reduce_resi();
  reduce_resi_ = value;
}

// optional int32 pet_fireResi = 8;
inline bool GuardMsg::has_pet_fireresi() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuardMsg::set_has_pet_fireresi() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuardMsg::clear_has_pet_fireresi() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuardMsg::clear_pet_fireresi() {
  pet_fireresi_ = 0;
  clear_has_pet_fireresi();
}
inline ::google::protobuf::int32 GuardMsg::pet_fireresi() const {
  return pet_fireresi_;
}
inline void GuardMsg::set_pet_fireresi(::google::protobuf::int32 value) {
  set_has_pet_fireresi();
  pet_fireresi_ = value;
}

// optional int32 pet_waterResi = 9;
inline bool GuardMsg::has_pet_waterresi() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuardMsg::set_has_pet_waterresi() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuardMsg::clear_has_pet_waterresi() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuardMsg::clear_pet_waterresi() {
  pet_waterresi_ = 0;
  clear_has_pet_waterresi();
}
inline ::google::protobuf::int32 GuardMsg::pet_waterresi() const {
  return pet_waterresi_;
}
inline void GuardMsg::set_pet_waterresi(::google::protobuf::int32 value) {
  set_has_pet_waterresi();
  pet_waterresi_ = value;
}

// optional int32 pet_electResi = 10;
inline bool GuardMsg::has_pet_electresi() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuardMsg::set_has_pet_electresi() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuardMsg::clear_has_pet_electresi() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuardMsg::clear_pet_electresi() {
  pet_electresi_ = 0;
  clear_has_pet_electresi();
}
inline ::google::protobuf::int32 GuardMsg::pet_electresi() const {
  return pet_electresi_;
}
inline void GuardMsg::set_pet_electresi(::google::protobuf::int32 value) {
  set_has_pet_electresi();
  pet_electresi_ = value;
}

// optional int32 pet_windResi = 11;
inline bool GuardMsg::has_pet_windresi() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuardMsg::set_has_pet_windresi() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuardMsg::clear_has_pet_windresi() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuardMsg::clear_pet_windresi() {
  pet_windresi_ = 0;
  clear_has_pet_windresi();
}
inline ::google::protobuf::int32 GuardMsg::pet_windresi() const {
  return pet_windresi_;
}
inline void GuardMsg::set_pet_windresi(::google::protobuf::int32 value) {
  set_has_pet_windresi();
  pet_windresi_ = value;
}

// optional int32 pet_darkResi = 12;
inline bool GuardMsg::has_pet_darkresi() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuardMsg::set_has_pet_darkresi() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuardMsg::clear_has_pet_darkresi() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuardMsg::clear_pet_darkresi() {
  pet_darkresi_ = 0;
  clear_has_pet_darkresi();
}
inline ::google::protobuf::int32 GuardMsg::pet_darkresi() const {
  return pet_darkresi_;
}
inline void GuardMsg::set_pet_darkresi(::google::protobuf::int32 value) {
  set_has_pet_darkresi();
  pet_darkresi_ = value;
}

// optional int32 pet_lightResi = 13;
inline bool GuardMsg::has_pet_lightresi() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuardMsg::set_has_pet_lightresi() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuardMsg::clear_has_pet_lightresi() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuardMsg::clear_pet_lightresi() {
  pet_lightresi_ = 0;
  clear_has_pet_lightresi();
}
inline ::google::protobuf::int32 GuardMsg::pet_lightresi() const {
  return pet_lightresi_;
}
inline void GuardMsg::set_pet_lightresi(::google::protobuf::int32 value) {
  set_has_pet_lightresi();
  pet_lightresi_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace watch
}  // namespace proto
}  // namespace yishi
}  // namespace road
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GuardMsg_2eproto__INCLUDED
